include('comm.niuuhe')

class MenuStatusEnum(ConstGroup):
    '''菜单状态枚举'''
    Visible = Item(1, '显示')
    InVisible = Item(0, '隐藏')

class MenuTypeEnum(ConstGroup):
    '''菜单状态枚举'''
    NULL = Item('NULL', '无类型')
    CATALOG = Item('CATALOG', '目录')
    MENU = Item('MENU', '菜单')
    BUTTON = Item('BUTTON', '按钮')
    EXTLINK = Item('EXTLINK', '外链')

class MenuTypeGroup(ConstGroup):
    '''菜单类型组'''
    MENU = Item(1, 'MENU')
    CATALOG = Item(2, 'CATALOG')
    EXTLINK = Item(3, 'EXTLINK')
    BUTTON = Item(4, 'BUTTON')

class MenuItem(Message):
    '''菜单视图对象'''
    id = required.LongField(desc='菜单ID')
    parentId = optional.LongField(desc='父菜单ID')
    name = required.StringField(desc='菜单名称')
    icon = optional.StringField(desc='ICON')
    path = optional.StringField(desc='路由相对路径')
    routeName = optional.StringField(desc='路由名称')
    component = optional.StringField(desc='组件路径')
    sort = optional.IntegerField(desc='菜单排序(数字越小排名越靠前)')
    visible = optional.EnumField(desc='是否可见', group=MenuStatusEnum)
    redirect = optional.StringField(desc='跳转路径')
    type = optional.StringEnumField(desc='菜单类型', group=MenuTypeEnum)
    perm = optional.StringField(desc='按钮权限标识')
    children = repeated.MessageField(cls=MenuItem, desc='子菜单')

class V1MenusListReq(Message):
    '''菜单列表请求'''
    keywords = optional.StringField(desc='关键字')
    status = optional.EnumField(desc='状态', group=MenuStatusEnum)
    type = optional.EnumField(desc='菜单类型, 忽略本参数', group=MenuTypeGroup)

class V1MenusListRsp(Message):
    '''菜单列表响应'''
    items = repeated.MessageField(cls=MenuItem, desc='菜单列表')

class V1MenusDeleteReq(Message):
    '''菜单删除请求'''
    ids = required.StringField(desc='菜单ID')

class V1MenusAddReq(Message):
    '''菜单表单对象'''
    id = optional.LongField(desc='菜单ID')
    parentId = optional.LongField(desc='父菜单ID')
    name = required.StringField(desc='菜单名称')
    type = optional.StringEnumField(desc='菜单类型', group=MenuTypeEnum)
    path = optional.StringField(desc='路由路径')
    component = optional.StringField(desc='组件路径(vue页面完整路径，省略.vue后缀)')
    perm = optional.StringField(desc='权限标识')
    visible = optional.EnumField(desc='显示状态', group=MenuStatusEnum)
    sort = optional.IntegerField(desc='排序(数字越小排名越靠前)')
    icon = optional.StringField(desc='菜单图标')
    redirect = optional.StringField(desc='跳转路径')
    keepAlive = optional.IntegerField(desc='是否开启缓存')
    alwaysShow = optional.IntegerField(desc='是否总是显示')

class MenuOptions(Message):
    value = required.LongField(desc='菜单ID')
    label = required.StringField(desc='菜单名称')
    children = repeated.MessageField(cls=MenuOptions, desc='子菜单')

class V1MenusOptionsRsp(Message):
    '''菜单选项列表响应'''
    items = repeated.MessageField(cls=MenuOptions, desc='菜单选项列表')

class MenuRouteMeta(Message):
    title = required.StringField(desc='路由title')
    icon = optional.StringField(desc='路由icon')
    hiddle = optional.BooleanField(desc='是否隐藏')
    roles = repeated.StringField(desc='拥有路由权限的角色编码')
    keepAlive = optional.BooleanField(desc='是否开启缓存')

class MenuRouteItem(Message):
    '''路由属性类型'''
    path = required.StringField(desc='路由路径')
    component = required.StringField(desc='组件路径')
    name = required.StringField(desc='路由名称')
    redirect = optional.StringField(desc='跳转链接')
    meta = required.MessageField(cls=MenuRouteMeta, desc='路由元信息')
    children = repeated.MessageField(cls=MenuRouteItem, desc='子路由')

class MenuRouteRsp(Message):
    items = repeated.MessageField(cls=MenuRouteItem, desc='路由列表')

class V1MenusFormReq(Message):
    '''菜单表单请求'''
    id = required.LongField(desc='菜单ID')

class V1MenusFormRsp(Message):
    '''菜单表单数据'''
    id = optional.LongField(desc='菜单ID')
    parentId = optional.LongField(desc='父菜单ID')
    name = required.StringField(desc='菜单名称')
    type = optional.StringEnumField(desc='菜单类型', group=MenuTypeEnum)
    path = optional.StringField(desc='路由路径')
    component = optional.StringField(desc='组件路径(vue页面完整路径，省略.vue后缀)')
    perm = optional.StringField(desc='权限标识')
    visible = optional.EnumField(desc='显示状态', group=MenuStatusEnum)
    sort = optional.IntegerField(desc='排序(数字越小排名越靠前)')
    icon = optional.StringField(desc='菜单图标')
    redirect = optional.StringField(desc='跳转路径')
    alwaysShow = optional.IntegerField(desc='是否总是显示')
    keepAlive = optional.IntegerField(desc='是否开启缓存')

class V1MenusUpdateReq(Message):
    '''修改菜单请求参数'''
    id = required.LongField(desc='菜单ID')
    parentId = optional.LongField(desc='父菜单ID')
    name = required.StringField(desc='菜单名称')
    type = optional.StringEnumField(desc='菜单类型', group=MenuTypeEnum)
    path = optional.StringField(desc='路由路径')
    component = optional.StringField(desc='组件路径(vue页面完整路径，省略.vue后缀)')
    perm = optional.StringField(desc='权限标识')
    visible = optional.EnumField(desc='显示状态', group=MenuStatusEnum)
    sort = optional.IntegerField(desc='排序(数字越小排名越靠前)')
    icon = optional.StringField(desc='菜单图标')
    redirect = optional.StringField(desc='跳转路径')
    alwaysShow = optional.IntegerField(desc='是否总是显示')
    keepAlive = optional.IntegerField(desc='是否开启缓存')

class V1MenusStatusReq(Message):
    '''修改菜单状态请求参数'''
    id = required.LongField(desc='菜单ID')
    visible = required.EnumField(desc='菜单状态', group=MenuStatusEnum)

class V1MenusPageReq(Message):
    '''菜单列表请求'''
    keywords = optional.StringField(desc='关键字')
    type = optional.EnumField(desc='菜单类型, 忽略本参数', group=MenuTypeGroup)
    pageNum = optional.IntegerField(desc='页码')
    pageSize = optional.IntegerField(desc='每页记录数')

class V1MenusPageRsp(Message):
    '''菜单列表响应'''
    items = repeated.MessageField(cls=comm.V1MenuTiny, desc='菜单列表')
    total = required.LongField(desc='总记录数')

with services():
    GET('菜单列表', 'v1/menus/list/', V1MenusListReq, wraps(V1MenusListRsp))
    POST('删除菜单', 'v1/menus/delete/', V1MenusDeleteReq, wraps(comm.NoneRsp))
    POST('新增菜单', 'v1/menus/add/', V1MenusAddReq, wraps(comm.NoneRsp))
    GET('菜单下拉列表', '/v1/menus/options/', comm.NoneReq, wraps(V1MenusOptionsRsp))
    GET('路由列表', '/v1/menus/routes/', comm.NoneReq, wraps(MenuRouteRsp))
    GET('菜单表单', '/v1/menus/form/', V1MenusFormReq, wraps(V1MenusFormRsp))
    POST('修改菜单', '/v1/menus/update/', V1MenusUpdateReq, wraps(comm.NoneRsp))
    POST('修改菜单状态', '/v1/menus/status/', V1MenusStatusReq, wraps(comm.NoneRsp))
    GET('菜单分页列表', '/v1/menus/page/', V1MenusPageReq, wraps(V1MenusPageRsp))

